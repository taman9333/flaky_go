name: Test with Flaky Report

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install Dependencies
        run: go mod tidy

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      # - name: Run Tests and Log Output
      #   run: |
      #     gotestsum \
      #     --format=github-actions \
      #     --rerun-fails --rerun-fails=10 --rerun-fails-max-failures=10 \
      #     --packages="./..." -- -count=1 | tee >(sed -n 's/\x1b\[[0-9;]*m//g; /=== Failed/,$p' > /tmp/raw_output.log)
      #     go run tools/flaky_test_report/main.go < /tmp/raw_output.log > flaky_report.txt

      - name: Run Tests and Log Output
        run: |
          gotestsum \
          --format=github-actions \
          --rerun-fails --rerun-fails=10 --rerun-fails-max-failures=10 \
          --packages="./..." -- -count=1 | tee /tmp/full_output.log
          exit_code=$?
          [ $exit_code -ne 0 ] && exit 1
          sed 's/\x1b\[[0-9;]*m//g' /tmp/full_output.log | awk '/=== Failed/ {found=1} found' > /tmp/raw_output.log

      - name: Output Flaky Tests
        if: always()
        run: |
          echo "Flaky Tests Detected:"
          cat flaky_report.txt

      - name: Comment on PR
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('flaky_report.txt', 'utf8');
            if (report.trim() !== 'No flaky tests detected.') {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `### Flaky Tests Detected:\n\n${report}`
              });
            }