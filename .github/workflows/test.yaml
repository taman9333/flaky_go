name: Test with Flaky Report

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install Dependencies
        run: go mod tidy

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Run Tests and Log Output
        run: |
          gotestsum \
            --format=github-actions \
            --rerun-fails --rerun-fails=10 --rerun-fails-max-failures=10 \
            --packages="./..." > raw_output.log || true
          echo "=== Raw Output ==="
          cat raw_output.log
          echo "=================="

      - name: Run Tests and Detect Flaky Tests
        run: |
          gotestsum \
            --format=github-actions \
            --rerun-fails --rerun-fails=10 --rerun-fails-max-failures=10 \
            --packages="./..." > raw_output.log
          go run tools/flaky_test_report/main.go < raw_output.log

      - name: Debug Flaky Report
        run: |
          echo "Contents of flaky_report.json:"
          cat flaky_report.json || echo "File not found or empty"

      - name: Check for Flaky Tests
        id: check-flaky
        run: |
          if [ -s flaky_report.json ]; then
            echo "flaky_found=true" >> $GITHUB_ENV
          else
            echo "flaky_found=false" >> $GITHUB_ENV
          fi

      - name: Post Comment on PR for Flaky Tests
        if: env.flaky_found == 'true'
        run: |
          COMMENT_BODY=$(cat flaky_report.json | jq -r '.tests | map("- `\(.name)`: \(.occurrences) flakiness occurrence(s)") | join("\n")')
          PAYLOAD=$(jq -n --arg body "### Flaky Test Report\n\n$COMMENT_BODY" '{body: $body}')
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "$PAYLOAD" \
            "${{ github.event.pull_request.url }}/comments"
