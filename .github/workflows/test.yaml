name: Test with Flaky Report

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install Dependencies
        run: go mod tidy

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Run Tests and Log Output
        run: |
          gotestsum \
          --format=github-actions \
          --rerun-fails --rerun-fails=10 --rerun-fails-max-failures=10 \
          --jsonfile='test_results.json' \
          --packages="./..." -- -count=1

      - name: Check Failures in Test Results
        id: check_failures
        run: |
          failures=$(sed -n '2{p;q;}' test_results.xml | awk -F'"' '{print $4}')
          echo "Failures: $failures"
          echo "::set-output name=failures::$failures"

      - name: Generate Flaky Report
        if: ${{ steps.check_failures.outputs.failures != '0' }}
        run: |
          go run tools/flaky_test/flaky_test_report_json/main.go > flaky_report.json

      - name: Generate PR Comment
        if: ${{ steps.check_failures.outputs.failures != '0' }}
        run: |
          go run tools/flaky_test/generate_pr_comment/main.go < flaky_report.json

      - name: Comment on PR
        if: ${{ steps.check_failures.outputs.failures != '0' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const commentPath = 'pr_comment_body.txt';
            if (!fs.existsSync(commentPath)) {
              console.log("PR comment body not found. Skipping comment.");
              return;
            }

            const body = fs.readFileSync(commentPath, 'utf8').trim();
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body,
            });

      # - name: Update Flaky Tests in Google Sheets
      #   if: success()
      #   run: go run tools/update_flaky_tests/main.go
      #   env:
      #     GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Update Jira Tickets for Flaky Tests
        if: ${{ steps.check_failures.outputs.failures != '0' }}
        run: go run tools/flaky_test/update_jira_tickets/main.go
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}